const mcl = require('./mcl.js')

mcl.init(mcl.BLS12_381).then(() => {
  console.log('ok')
  mcl.setETHserialization(true)
  mcl.setMapToMode(mcl.IRTF)
  let g1 = new mcl.G1()
  let g2 = new mcl.G2()
  console.log(`g2 zero=${g2.serializeToHexStr()}`)
  g1.setHashOf("asdf") // not compatible Ethereum spec now
  g2.setHashOf("asdf")
  console.log(`g1=${g1.getStr(16|mcl.EC_PROJ)}`)
  const x = g1.getX()
  const y = g1.getY()
  const z = g1.getZ()
  let g11 = new mcl.G1()
  console.log(`g11=${g11.getStr(16|mcl.EC_PROJ)}`)
  console.log(`eq ${g1.isEqual(g11)}`)
  g11.setX(x)
  g11.setY(y)
  g11.setZ(z)
  console.log(`g11=${g11.getStr(16|mcl.EC_PROJ)}`)
  console.log(`eq ${g1.isEqual(g11)}`)
  console.log(`g1.x=${g1.getX().getStr(16)}`)
  console.log(`g1.y=${g1.getY().getStr(16)}`)
  console.log(`g1.z=${g1.getZ().getStr(16)}`)
  console.log(`g2=${g2.getStr(16)}`)
/*
  console.log(`g2.x=${g2.getX().getStr(16)}`)
  console.log(`g2.y=${g2.getY().getStr(16)}`)
  console.log(`g2.z=${g2.getZ().getStr(16)}`)
*/
  console.log(`g2=${g2.serializeToHexStr()}`)
  let r = new mcl.Fr()
  const b = mcl.fromHexStr('b3c940fe79b6966489b527955de7599194a9ac69a6ff58b8d99e7b1084f0464e')
  r.setBigEndianMod(b)
  console.log(r.getStr(16))
})
